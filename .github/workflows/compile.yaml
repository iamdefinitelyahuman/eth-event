name: Compile

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Check out the PR branch
          ref: ${{ github.head_ref }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Delete existing build files
        run: rm -r build
        
      - name: Install Eth Event
        run: pip install .
          
      - name: Normalize C files for diffchecking
        # This makes it much easier to diffcheck changes in the C files
        run: |
          # Insert DIFFCHECK_PLACEHOLDER macro at the top if not present
          for f in build/*.c; do
            if ! grep -q 'DIFFCHECK_PLACEHOLDER' "$f"; then
              sed -i '1i#ifndef DIFFCHECK_PLACEHOLDER\n#define DIFFCHECK_PLACEHOLDER 0\n#endif' "$f"
            fi
          done
          # Replace line number in CPy_AddTraceback with macro
          sed -i 's/\(CPy_AddTraceback([^,]*, *[^,]*, *\)[0-9]\+\(, *[^)]*)\)/\1DIFFCHECK_PLACEHOLDER\2/g' build/*.c
          # Replace index in CPyStatics[...] with macro
          sed -i 's/CPyStatics\[[0-9]\+\]/CPyStatics[DIFFCHECK_PLACEHOLDER]/g' build/*.c

      - name: Check for changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Commit changes
        if: env.changes_detected == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: compile C files for source control"
          git push
